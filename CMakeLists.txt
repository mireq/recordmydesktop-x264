project(recordmydesktop C)

set(VERSION 0.3.6)

cmake_minimum_required(VERSION 2.6)
cmake_policy(SET CMP0003 NEW)

include (CheckTypeSize)
check_type_size("u_int16_t" HAVE_U_INT16_T)
check_type_size("u_int32_t" HAVE_U_INT32_T)
check_type_size("u_int64_t" HAVE_U_INT64_T)

option(USE_JACK "Use JACK audio" ON)

if (NOT SIZEOF_UINT16_T OR NOT SIZEOF_UINT32_T OR NOT SIZEOF_UINT64_T)
	message(FATAL_ERROR "Required uint types not found!")
endif (NOT SIZEOF_UINT16_T OR NOT SIZEOF_UINT32_T OR NOT SIZEOF_UINT64_T)

include (CheckIncludeFiles)
check_include_files(alsa/asoundlib.h HAVE_ASOUNDLIB_H)
check_include_files(endian.h HAVE_ENDIAN_H)
if (NOT HAVE_ENDIAN_H)
	check_include_files(machine/endian.h HAVE_MACHINE_ENDIAN_H)
endif (NOT HAVE_ENDIAN_H)
check_include_files(sys/soundcard.h HAVE_SOUNDCARD_H)
check_include_files(sys/time.h;unistd.h;vorbis/vorbisfile.h;fcntl.h HAVE_SOUNDCARD_H)

find_library(LIBM_LIBRARY NAMES m)
find_library(LIBZ_LIBRARY NAMES z)
find_library(LIBPOPT_LIBRARY NAMES popt)
find_library(LIBICE_LIBRARY NAMES ICE)
find_library(LIBSM_LIBRARY NAMES SM)
find_library(LIBX11_LIBRARY NAMES X11)
find_library(LIBXEXT_LIBRARY NAMES Xext)
find_library(LIBXFIXES_LIBRARY NAMES Xfixes)
find_library(LIBXDAMAGE_LIBRARY NAMES Xdamage)
find_library(LIBVORBIS_LIBRARY NAMES vorbis)
find_library(LIBVORBISFILE_LIBRARY NAMES vorbisfile)
find_library(LIBVORBISENC_LIBRARY NAMES vorbisenc)
find_library(LIBOGG_LIBRARY NAMES ogg)
find_library(LIBTHEORA_LIBRARY NAMES theora)
find_library(LIBPTHREAD_LIBRARY NAMES pthread)
if (USE_JACK)
	find_library(LIBJACK_LIBRARY NAMES jack)
endif (USE_JACK)
find_library(LIBASOUND_LIBRARY NAMES asound)

if (LIBJACK_LIBRARY)
	set(HAVE_LIBJACK 1)
endif (LIBJACK_LIBRARY)
if (LIBASOUND_LIBRARY)
	set(HAVE_LIBASOUND 1)
endif (LIBASOUND_LIBRARY)

add_subdirectory(src)

configure_file("${CMAKE_CURRENT_SOURCE_DIR}/config.h.in" "${CMAKE_CURRENT_BINARY_DIR}/config.h")
